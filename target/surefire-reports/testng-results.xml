<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="28" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-09T23:07:35 IST" name="Suite" finished-at="2023-05-09T23:11:42 IST" duration-ms="247457">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-05-09T23:07:35 IST" name="Test" finished-at="2023-05-09T23:11:42 IST" duration-ms="247457">
      <class name="tpack.RegisterAccountTest">
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:20 IST" name="OpenApplication" finished-at="2023-05-09T23:08:25 IST" duration-ms="4438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="registerAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.Number,java.lang.String,java.lang.String)[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:25 IST" name="registerAccount" data-provider="registerAccountData" finished-at="2023-05-09T23:08:36 IST" duration-ms="11323" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Naveen]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[         n1234]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Successfull]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Successfull] but found [Failure]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Successfull] but found [Failure]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tpack.RegisterAccountTest.registerAccount(RegisterAccountTest.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccount -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:36 IST" name="closeBrowser" finished-at="2023-05-09T23:08:36 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:36 IST" name="OpenApplication" finished-at="2023-05-09T23:08:38 IST" duration-ms="1985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="registerAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.Number,java.lang.String,java.lang.String)[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:38 IST" name="registerAccount" data-provider="registerAccountData" finished-at="2023-05-09T23:08:49 IST" duration-ms="11094" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arun]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[palA@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1232]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[       p1233]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Successfull]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Successfull] but found [Failure]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Successfull] but found [Failure]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tpack.RegisterAccountTest.registerAccount(RegisterAccountTest.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccount -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:49 IST" name="closeBrowser" finished-at="2023-05-09T23:08:49 IST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:49 IST" name="OpenApplication" finished-at="2023-05-09T23:08:51 IST" duration-ms="2024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="registerAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.Number,java.lang.String,java.lang.String)[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:08:51 IST" name="registerAccount" data-provider="registerAccountData" finished-at="2023-05-09T23:09:02 IST" duration-ms="11196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[navi@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[n1234]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccount -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tpack.RegisterAccountTest@dd05255]" started-at="2023-05-09T23:09:02 IST" name="closeBrowser" finished-at="2023-05-09T23:09:02 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tpack.RegisterAccountTest -->
      <class name="tpack.BookAnItemTest">
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.BookAnItemTest@6a78afa0]" started-at="2023-05-09T23:09:02 IST" name="OpenApplication" finished-at="2023-05-09T23:09:04 IST" duration-ms="2034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="bookingPhone()[pri:0, instance:tpack.BookAnItemTest@6a78afa0]" started-at="2023-05-09T23:09:04 IST" name="bookingPhone" finished-at="2023-05-09T23:09:21 IST" duration-ms="16180" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//label[normalize-space()='I want to use a new address']//input[@name='payment_address']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [49aa7b21231d8ebefae52f9d898966bb, findElement {using=xpath, value=//label[normalize-space()='I want to use a new address']//input[@name='payment_address']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\NAVEEN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:52337}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52337/devtoo..., se:cdpVersion: 112.0.5615.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 49aa7b21231d8ebefae52f9d898966bb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//label[normalize-space()='I want to use a new address']//input[@name='payment_address']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [49aa7b21231d8ebefae52f9d898966bb, findElement {using=xpath, value=//label[normalize-space()='I want to use a new address']//input[@name='payment_address']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\NAVEEN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:52337}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52337/devtoo..., se:cdpVersion: 112.0.5615.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 49aa7b21231d8ebefae52f9d898966bb
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy33.isDisplayed(Unknown Source)
at tpack.BookAnItemTest.bookingPhone(BookAnItemTest.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingPhone -->
        <test-method is-config="true" signature="close()[pri:0, instance:tpack.BookAnItemTest@6a78afa0]" started-at="2023-05-09T23:09:21 IST" name="close" finished-at="2023-05-09T23:09:21 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- tpack.BookAnItemTest -->
      <class name="tpack.LoginTest">
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:36 IST" name="OpenApplication" finished-at="2023-05-09T23:07:39 IST" duration-ms="3264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:39 IST" name="login" data-provider="loginData" finished-at="2023-05-09T23:07:40 IST" duration-ms="914" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[n1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Successfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closeBrowse()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:40 IST" name="closeBrowse" finished-at="2023-05-09T23:07:40 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowse -->
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:40 IST" name="OpenApplication" finished-at="2023-05-09T23:07:42 IST" duration-ms="2303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:42 IST" name="login" data-provider="loginData" finished-at="2023-05-09T23:07:53 IST" duration-ms="10678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nnge12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closeBrowse()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:53 IST" name="closeBrowse" finished-at="2023-05-09T23:07:53 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowse -->
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:53 IST" name="OpenApplication" finished-at="2023-05-09T23:07:55 IST" duration-ms="2134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:07:55 IST" name="login" data-provider="loginData" finished-at="2023-05-09T23:08:07 IST" duration-ms="11681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pal12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closeBrowse()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:08:07 IST" name="closeBrowse" finished-at="2023-05-09T23:08:07 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowse -->
        <test-method is-config="true" signature="OpenApplication()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:08:07 IST" name="OpenApplication" finished-at="2023-05-09T23:08:09 IST" duration-ms="2159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:08:09 IST" name="login" data-provider="loginData" finished-at="2023-05-09T23:08:20 IST" duration-ms="10804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pal@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[n555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closeBrowse()[pri:0, instance:tpack.LoginTest@30c15d8b]" started-at="2023-05-09T23:08:20 IST" name="closeBrowse" finished-at="2023-05-09T23:08:20 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowse -->
      </class> <!-- tpack.LoginTest -->
      <class name="runner.Runner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:21 IST" name="setUpClass" finished-at="2023-05-09T23:09:21 IST" duration-ms="606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@683dbc2c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:25 IST" duration-ms="3953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate login and logout"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application logOut"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:29 IST" duration-ms="4097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:35 IST" duration-ms="5855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid credential"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:38 IST" duration-ms="2798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid Email and invalid Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:42 IST" duration-ms="3836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid Email and valid Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:45 IST" duration-ms="3456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Without any data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:49 IST" duration-ms="4119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid Email and skip Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:54 IST" duration-ms="4332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with Valid Password and skip Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:09:58 IST" duration-ms="3855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Forgotten Password using valid Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:09:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:01 IST" duration-ms="3579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Forgotten Password using invalid Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:04 IST" duration-ms="2966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Forgotten Password without providing an email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Application Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:04 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:12 IST" duration-ms="7276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an Account by providing only the Mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:30 IST" duration-ms="18773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an Account by providing all fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:37 IST" duration-ms="7170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an Account by providing all fields but not select Privacy Policy"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:37 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:47 IST" duration-ms="9176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an Account by skipping all the Mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:47 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:10:54 IST" duration-ms="7648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an account by providing all the Mandatory fields but skiped the First name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:10:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:03 IST" duration-ms="9081" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an account by providing all the Mandatory fields but skiped the Last name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:11 IST" duration-ms="7819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an account by providing all the Mandatory fields but skiped the Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:19 IST" duration-ms="7326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an account by providing all the Mandatory fields but skiped the Telephone"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:25 IST" duration-ms="6944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an account by providing all the Mandatory fields but skiped the Password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:33 IST" duration-ms="7093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an account by providing all the Mandatory fields but not provide same password in Password confirm fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:39 IST" duration-ms="6747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Register an Account by providing all fields but use invalid formate of Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-05-09T23:11:42 IST" duration-ms="2775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify whether the User is able to search for the Product"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.Runner@1f2586d6]" started-at="2023-05-09T23:11:42 IST" name="tearDownClass" finished-at="2023-05-09T23:11:42 IST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
